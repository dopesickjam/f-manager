name: F-Manager

on:
  push:
    branches:
      - 'main'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.tag.outputs.image_tag }}
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v4
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Docker TAG
      id: tag
      run: |
        IMAGE_TAG=$(echo ${{ github.sha }} | head -c7)
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
        echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: ${{ steps.tag.outputs.image_tag }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/arm64/v8

  update-repo-tag:
    runs-on: ubuntu-latest
    environment: main
    needs: build-and-push-image
    steps:
    - uses: actions/checkout@v4
      with:
        repository: 'dopesickjam/argo'
        ref: 'main'
        ssh-key: ${{ secrets.CICD_PRIVATE_KEY }}

    - name: Install YQ
      run: sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq

    - name: Commit new version to Argo repo
      run: |
        ls -la f-manager/values.yaml
        yq -i ".image.tag = \"${{ needs.build-and-push-image.outputs.image-tag }}\"" f-manager/values.yaml
        
        # Commit
        if [[ -z $(git status -s) ]]; then
          echo "Nothing to deploy"
          exit 0
        fi
        
        git config --global user.name 'Dopesick Jam (Github) CI/CD'
        git config --global user.email 'dopesickjam@gmail.com'
        
        git add f-manager/values.yaml
        git commit -s -m "ðŸ¤–:octocat: Automated CI/CD commit ðŸŸ¢
        Bump F-Manger tags
          To: ${{ steps.meta.outputs.tags }}
        "
        git push
